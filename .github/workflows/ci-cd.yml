name: CI/CD

on:
  workflow_dispatch:
permissions: {}

jobs:
  config-deploy:
    name: Configure Deployment
    # do not build or deploy on forked repositories
    runs-on: ubuntu-latest
    outputs:
      image: ${{ steps.action.outputs.image }}
      image-exists: ${{ steps.image.outputs.exists }}
      image-version: ${{ steps.action.outputs.version }}

    steps:
      - name: Checkout
        uses: actions/checkout@v3

      - name: Extract action image and version
        # we deploy from a specific commit on master (the one that mentions a new version the first time)
        # so we need to tell docker/metadata-action to extract docker tags from that version
        id: action
        run: |
          image=$(grep -A 10 "^runs:" action.yml | grep -E "^\s+image:\s" | cut -d"@" -f1 | sed -E -e "s/^\s+image:\s*'//" -e "s/docker:\/\///" -e "s/'\s*$//")
          version=$(cut -d : -f 2 <<< "$image")
          echo "image=$image" >>$GITHUB_OUTPUT
          echo "version=$version" >>$GITHUB_OUTPUT
        shell: bash

      - name: Check action image existence
        id: image
        env:
          DOCKER_CLI_EXPERIMENTAL: enabled
        run: |
          if docker manifest inspect '${{ steps.action.outputs.image }}'
          then
            echo "exists=true" >>$GITHUB_OUTPUT
          fi
        shell: bash

  deploy:
    name: Deploy to GitHub
    needs: [ config-deploy ]
    runs-on: ubuntu-latest
    permissions:
      packages: write
    steps:
      - name: Docker meta
        id: docker-meta
        uses: docker/metadata-action@v4
        with:
          images: ghcr.io/${{ github.repository_owner }}/publish-unit-test-result-action
          flavor: |
            latest=false
            prefix=v
          tags: |
            type=sha
            type=ref,event=tag
            type=semver,pattern={{major}},value=${{ needs.config-deploy.outputs.image-version }}
            type=semver,pattern={{major}}.{{minor}},value=${{ needs.config-deploy.outputs.image-version }}
            type=semver,pattern={{version}},value=${{ needs.config-deploy.outputs.image-version }}

      - name: Set up QEMU
        uses: docker/setup-qemu-action@v2

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2

      - name: Login to GitHub Container Registry
        uses: docker/login-action@v2
        with:
          registry: ghcr.io
          username: ${{ github.repository_owner }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Build and push Docker image
        uses: docker/build-push-action@v4
        with:
          tags: ${{ steps.docker-meta.outputs.tags }}
          labels: ${{ steps.docker-meta.outputs.labels }}
          pull: true
          # deploy image actions from commits pushed to master and
          # deploy Dockerfile actions from pushed version tags (no major versions)
          push: true  # triggered by hand
